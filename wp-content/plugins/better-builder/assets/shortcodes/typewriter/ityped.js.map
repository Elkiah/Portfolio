{"version":3,"file":"ityped.js","sources":["../src/ityped.js"],"sourcesContent":["/**\n * async foreach\n * https://www.npmjs.com/package/async-foreach\n */\nconst forEach = function (a, b, c) {\n  var d = -1,\n    e = a.length >>> 0;\n  (function f(g) {\n    var h,\n      j = g === !1;\n    do\n      ++d;\n    while (!(d in a) && d !== e);\n    if (j || d === e) {\n      c && c(!j, a);\n      return\n    }\n    g = b.call({\n      async: function () {\n        return h = !0,\n        f\n      }\n    }, a[d], d, a),\n    h || f(g)\n  })();\n};\n\n\n/**\n * el is the element\n */\nlet selectedElement,\n  props,\n  /**\n  * creating the cursor\n  */\n  cursor = document.createElement('span');\n  cursor.classList.add('ityped-cursor');\n  cursor.textContent = '|';\n\n/**\n * @name setProps\n * @description Set the ityped properties configuration\n * @param {Object} config The configuration properties\n * @return {Promise}\n */\nfunction setProps ( config ) {\n  let props = config;\n  props.strings    = config.strings    || ['Put your string here...', 'and Enjoy!']\n  props.typeSpeed  = config.typeSpeed  || 100;\n  props.backSpeed  = config.backSpeed  || 50;\n  props.backDelay  = config.backDelay  || 500;\n  props.startDelay = config.startDelay || 500;\n  props.showCursor = config.showCursor;\n  props.loop       = config.loop       || false;\n\n  if (props.showCursor === undefined) props.showCursor = true;\n\n  return Promise.resolve(props);\n}\n/**\n * @name init\n * @param { String || Element } element The element that will receive the strings\n * @param {Object} config The initial configuration\n */\nfunction init(element, config) {\n  typeof element === 'string'\n    ? element = document.querySelector(element)\n    : element = element;\n  setProps(config).then(function(properties){\n    props = properties;\n    element._props = props;\n  // init cursor if needed\n  if (props.showCursor) {\n        initCursorOn(element, props.cursorChar ||Â '|');\n  }\n    loopingOnWords(element);\n  })\n}\n\nfunction initCursorOn(element, cursorChar) {\n    const newCursor = cursor.cloneNode();\n  element.insertAdjacentElement('afterend', newCursor);\n    newCursor.textContent = cursorChar;\n}\n\n/**\n * @name loopingOnWords\n * @description Loop on each string passed\n * @param {HTMLElement} \telement \tThe element to handle the animation on\n * @param {Array} words The array that contain the words\n */\nfunction loopingOnWords(element) {\n  forEach(element._props.strings, function (word, index, arr) {\n    let time = (element._props.typeSpeed * word.length - 1);\n    /**\n     * set the correct time\n     * with the differences of type and back\n     * speed\n     */\n    if (element._props.backSpeed < element._props.typeSpeed) {\n      time -= (element._props.typeSpeed - element._props.backSpeed) * word.length;\n  } else if (element._props.backSpeed > element._props.typeSpeed) {\n      time += (element._props.backSpeed - element._props.typeSpeed) * word.length;\n    }\n    let done = this.async();\n    let len = element._props.strings.length;\n    iterateWords(element, word, index, len).then(function () {\n      setTimeout(function () {\n        done();\n      }, time)\n    })\n  }, function () {\n    if (element._props.loop) {\n      loopingOnWords(element);\n    }\n  });\n}\n/**\n * @name increment\n * @description Increment each letter and append it on element\n * @param {Element} element The Element that will receive the letters\n * @param {String} word The string that will be looped to\n * get each letter\n * @return {Promise}\n */\nfunction increment(element, word) {\n  return new Promise(function (resolve, reject) {\n      let count = 0;\n    for (let i = 0; i < word.length; i++) {\n      let wordIndex = i;\n      let len = word.length;\n      setTimeout(function (i) {\n        appendWord(element, word.charAt(wordIndex));\n        count++;\n        if (count === len - 1) {\n          resolve();\n        }\n      }, element._props.typeSpeed * i);\n    }\n  })\n}\n/**\n * @name appendWord\n * @description Append each letter on Element\n * @param {Element} element The Element that will receive the letter\n * @param {String} word The string that will be appended\n */\nfunction appendWord(element, word) {\n  element.innerHTML += word;\n}\n\n/**\n * @name iterateWords\n * @description Iterate on each word, incrementing and decrementing\n * @param {Element} element The Element that will receive the letters of word\n * @param {String} word The string that is the word\n * @param {Integer} index The index position of the words Array\n * @param {Integer} wordsLengthArray The length of words Array\n * @return {Promise}\n */\nfunction iterateWords(element, word, index, wordsLengthArray) {\n  return new Promise(function (resolve, reject) {\n    increment(element, word)\n      .then(function () {\n        setTimeout(function () {\n          decrement(element, word, index, wordsLengthArray)\n            .then(function () {\n              setTimeout(function(){\n                resolve();\n              }, element._props.startDelay)\n            });\n        }, element._props.backDelay)\n      });\n  });\n}\n/**\n * @name iterateInsideDecrement\n * @description Iterate on each word, inside the decrement function for decrement the word\n * @param {Element} element The Element that will receive the letters of word\n * @param {String} word The string that is the word\n * @param {Integer} len The length of words Array\n * @param {Promise} resolve The Promise.resolve method that will be trigerred when\n * the decrement iteration are finished\n * @return {Promise}\n */\nfunction iterateInsideDecrement(element, word, len, resolve) {\n  for (let i = len; i > 0; i--) {\n    let iteratedI = i, count = len;\n    setTimeout(function (i) {\n      element.innerHTML = word.substring(0, len - iteratedI)\n      count--;\n      if (iteratedI === 1) {\n        resolve();\n      }\n    }, element._props.backSpeed * i);\n  }\n}\n\n/**\n * @name decrement\n * @description decrement the word in the correct case\n * @param {Element} element The Element that will receive the letters of word\n * @param {String} word The string that is the word\n * @param {Integer} index The index of the Array that contain the word\n * @param {Integer} lengthWords The length of words Array\n */\nfunction decrement(element, word, index, lengthWords) {\n  return new Promise(function (resolve, reject) {\n    let len = word.length;\n    // if is the last letter and the last word and no loop\n    if (index + 1 === lengthWords) {\n      if (!element._props.loop) {\n      // when the last word\n        if (element._props.onFinished !== undefined && typeof element._props.onFinished === \"function\"){\n            element._props.onFinished();\n        }\n        element.innerHTML = word;\n      }\n      else if (element._props.loop) {\n        iterateInsideDecrement(element, word, len, resolve);\n      }\n    } else if (index + 1 !== lengthWords) {\n      iterateInsideDecrement(element, word, len, resolve);\n    }\n  })\n}\n\n/**\n * @name destroy\n * @description destroy the onFinished function\n */\nfunction destroy (element) {\n  element._props.onFinished = function(){return void 0};\n}\n\n/**\n * Return the init function\n */\nexport { init, destroy };\n"],"names":["forEach","a","b","c","d","e","length","f","g","h","j","call","selectedElement","props","cursor","document","createElement","classList","add","textContent","setProps","config","strings","typeSpeed","backSpeed","backDelay","startDelay","showCursor","loop","undefined","Promise","resolve","init","element","querySelector","then","properties","_props","cursorChar","initCursorOn","newCursor","cloneNode","insertAdjacentElement","loopingOnWords","word","index","arr","time","done","async","len","increment","reject","count","i","wordIndex","charAt","appendWord","innerHTML","iterateWords","wordsLengthArray","iterateInsideDecrement","iteratedI","substring","decrement","lengthWords","onFinished","destroy"],"mappings":"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"}